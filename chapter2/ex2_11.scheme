(define (make-interval a b) (cons (min a b) (max a b)))
(define (lower-bound z) (car z))
(define (upper-bound z) (cdr z))

(define (print-interval p)
    (newline)
    (display "(")
    (display (lower-bound p))
    (display ",")
    (display (upper-bound p))
    (display ")"))

; 区间乘法的9种可能
(define (mul-interval x y)
    (let ((x1 (lower-bound x))
          (x2 (upper-bound x))
          (y1 (lower-bound y))
          (y2 (upper-bound y)))
        (cond ((>= x1 0)
               (cond ((>= y1 0) (make-interval (* x1 y1) (* x2 y2)))
                     ((<= y2 0) (make-interval (* x2 y1) (* x1 y2)))
                     (else (make-interval (* x2 y1) (* x2 y2)))))
              ((<= x2 0)
               (cond ((>= y1 0) (make-interval (* x1 y2) (* x2 y1)))
                     ((<= y2 0) (make-interval (* x2 y2) (* x1 y1)))
                     (else (make-interval (* x1 y2) (* x1 y1)))))
              (else
               (cond ((>= y1 0) (make-interval (* x1 y2) (* x2 y2)))
                     ((<= y2 0) (make-interval (* x2 y1) (* x1 y1)))
                     (else (make-interval (min (* x1 y2) (* x2 y1)) (max (* x2 y2) (* x1 y1)))))))))

(print-interval (mul-interval (make-interval 4 8) (make-interval 1 3)))
(print-interval (mul-interval (make-interval 4 8) (make-interval -3 -1)))
(print-interval (mul-interval (make-interval 4 8) (make-interval -1 3)))
(print-interval (mul-interval (make-interval -8 -4) (make-interval 1 3)))
(print-interval (mul-interval (make-interval -8 -4) (make-interval -3 -1)))
(print-interval (mul-interval (make-interval -8 -4) (make-interval -1 3)))
(print-interval (mul-interval (make-interval -4 8) (make-interval 1 3)))
(print-interval (mul-interval (make-interval -4 8) (make-interval -3 -1)))
(print-interval (mul-interval (make-interval -4 8) (make-interval -1 3)))
